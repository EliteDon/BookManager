{"remainingRequest":"D:\\java\\BookManager\\front\\node_modules\\thread-loader\\dist\\cjs.js!D:\\java\\BookManager\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\java\\BookManager\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\java\\BookManager\\front\\src\\views\\bookinfo\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\java\\BookManager\\front\\src\\views\\bookinfo\\index.vue","mtime":1680015830215},{"path":"D:\\java\\BookManager\\front\\babel.config.js","mtime":1676974401511},{"path":"D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685317033470},{"path":"D:\\java\\BookManager\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1685317033486},{"path":"D:\\java\\BookManager\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1685317033599},{"path":"D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685317033470},{"path":"D:\\java\\BookManager\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1685317080078}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}