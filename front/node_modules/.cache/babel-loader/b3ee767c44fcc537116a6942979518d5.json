{"remainingRequest":"D:\\java\\BookManager\\front\\node_modules\\thread-loader\\dist\\cjs.js!D:\\java\\BookManager\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\java\\BookManager\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\java\\BookManager\\front\\node_modules\\vue-live2d\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\java\\BookManager\\front\\node_modules\\vue-live2d\\src\\index.vue","mtime":1684715706473},{"path":"D:\\java\\BookManager\\front\\babel.config.js","mtime":1676974401511},{"path":"D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684135544077},{"path":"D:\\java\\BookManager\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1684135544058},{"path":"D:\\java\\BookManager\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1684135549350},{"path":"D:\\java\\BookManager\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684135544077},{"path":"D:\\java\\BookManager\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1684135553513}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}